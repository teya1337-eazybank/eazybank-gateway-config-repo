server:
  port: ${SERVER_PORT}

spring:
  application:
    name: ${SPRING_APPLICATION_NAME}

  # DESC: For spring cloud bus and refreshing microservices' configs with the config-server
  # NOTE: rabbitmq is used to relay info to microservices that configs at the config-server have been updated
  rabbitmq:
    host: ${RABBITMQ_HOST}
    port: ${RABBITMQ_PORT}
    username: ${RABBITMQ_USERNAME}
    password: ${RABBITMQ_PASSWORD}

  # DESC: Enable to "true" to tells the gateway to automatically locate all the registered microservices
  # NOTE: With discovery locator enabled, you do not have to manually configure custom routes to microservices (however this feature has its limitations and it's better to set up custom routes)
  # NOTE: RECOMMENDATION: Disable this feature when setting up set up custom routes
  cloud:
    gateway:
      discovery:
        locator:
          enabled: false
          # DESC: Make registered microservice names be lower-cased when using them as url paths
          lower-case-service-id: true

      # DESC: Configure timeouts for the gateway
      httpclient:
        # DESC: Timeout for the time the gateway will wait to get a connection thread from a microservice
        connect-timeout: 1000
        # DESC: Timeout for the time the gateway will wait to get a response back from the microservice
        response-timeout: 2s

eureka:
  instance:
    # DESC: Setting 'true' tells this service to register with eureka using its IP address instead of its hostname as obtained by the OS/DNS
    # RECOMMENDED: Setting 'true' to 'prefer-ip-address' is the recommended approach.
    prefer-ip-address: true

  # DESC: Enable yourself to query the eureka registry (to find services)
  # DESC: Register yourself with eureka
  # DESC: Locate eureka at the specified url
  client:
    enabled: true
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE}

# DESC: Actuator endpoint management
management:
  endpoints:
    # DESC: Expose all web actuator endpoints
    web:
      exposure:
        include: '*'

  # DESC: Enable gateway related endpoints in actuator
  endpoint:
    gateway:
      enabled: true

    # DESC: Enable us to probe "/actuator/health/liveness" & "/actuator/health/readiness" endpoints
    health:
      probes:
        enabled: true

  # DESC: Enable "/actuator/health/liveness" & "/actuator/health/readiness" endpoints
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true

  # DESC: For enabling the "/actuator/info" endpoint
  info:
    env:
      enabled: true
